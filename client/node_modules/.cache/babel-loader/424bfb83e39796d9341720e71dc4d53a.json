{"ast":null,"code":"import { FILTER_BY_MAYOR_CINCUENTA, DELETE_ACTIVITY, FILTER_BY_ACTIVITIES, FILTER_BY_CONTINENT, GET_COUNTRIES, ORDER_BY_NAME, SEARCH_COUNTRIES, ASCENDENTE, POST_ACTIVITIES, GET_ACTIVITIES, ORDER_BY_POPULATION, HIGHER_POPULATION, DETAIL, RESET } from '../04_const/Const';\nconst initialState = {\n  countries: [],\n  allCountries: [],\n  activities: [],\n  detail: []\n};\nexport default function rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_COUNTRIES:\n      return { ...state,\n        countries: action.payload,\n        allCountries: action.payload\n      };\n\n    case FILTER_BY_CONTINENT:\n      const filtredCountriesByContinent = state.allCountries;\n      const continentFilteredBC = action.payload === 'All' ? filtredCountriesByContinent : filtredCountriesByContinent.filter(el => el.continent === action.payload);\n      return { ...state,\n        countries: continentFilteredBC\n      };\n\n    case FILTER_BY_MAYOR_CINCUENTA:\n      const filtredCountriesByMayorCincuenta = state.allCountries;\n      const continentFilteredBCincuenta = action.payload === 'All' ? filtredCountriesByContinent : filtredCountriesByContinent.filter(el => el.continent === action.payload);\n      return { ...state,\n        countries: continentFilteredBCincuenta\n      };\n\n    case FILTER_BY_ACTIVITIES:\n      const filtredCountriesByActivities = state.allCountries;\n      const continentFilteredBA = filtredCountriesByActivities.filter(c => {\n        return c.activities.find(c => {\n          return c.name === action.payload;\n        });\n      });\n\n      if (action.payload === 'todos') {\n        return { ...state,\n          countries: filtredCountriesByActivities\n        };\n      } else {\n        return { ...state,\n          countries: continentFilteredBA\n        };\n      }\n\n    case POST_ACTIVITIES:\n      return { ...state\n      };\n\n    case DELETE_ACTIVITY:\n      return { ...state,\n        activities: action.payload\n      };\n\n    case GET_ACTIVITIES:\n      return { ...state,\n        activities: action.payload\n      };\n\n    case DETAIL:\n      return { ...state,\n        detail: action.payload\n      };\n\n    case RESET:\n      return { ...state,\n        detail: []\n      };\n\n    case SEARCH_COUNTRIES:\n      return { ...state,\n        countries: action.payload\n      };\n\n    case ORDER_BY_NAME:\n      let orderCountriesByName = action.payload === ASCENDENTE ? state.countries.sort((a, b) => {\n        if (a.name < b.name) {\n          return -1;\n        }\n\n        if (a.name > b.name) {\n          return 1;\n        }\n\n        return 0;\n      }) : state.countries.sort((a, b) => {\n        if (a.name < b.name) {\n          return 1;\n        }\n\n        if (a.name > b.name) {\n          return -1;\n        }\n\n        return 0;\n      });\n      return { ...state,\n        countries: orderCountriesByName\n      };\n\n    case ORDER_BY_POPULATION:\n      let orderCountriesByPopulation = action.payload === HIGHER_POPULATION ? state.countries.sort((a, b) => {\n        if (a.population < b.population) {\n          return 1;\n        }\n\n        if (a.population > b.population) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.countries.sort((a, b) => {\n        if (a.population < b.population) {\n          return -1;\n        }\n\n        if (a.population > b.population) {\n          return 1;\n        }\n\n        return 0;\n      });\n      return { ...state,\n        countries: orderCountriesByPopulation\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["FILTER_BY_MAYOR_CINCUENTA","DELETE_ACTIVITY","FILTER_BY_ACTIVITIES","FILTER_BY_CONTINENT","GET_COUNTRIES","ORDER_BY_NAME","SEARCH_COUNTRIES","ASCENDENTE","POST_ACTIVITIES","GET_ACTIVITIES","ORDER_BY_POPULATION","HIGHER_POPULATION","DETAIL","RESET","initialState","countries","allCountries","activities","detail","rootReducer","state","action","type","payload","filtredCountriesByContinent","continentFilteredBC","filter","el","continent","filtredCountriesByMayorCincuenta","continentFilteredBCincuenta","filtredCountriesByActivities","continentFilteredBA","c","find","name","orderCountriesByName","sort","a","b","orderCountriesByPopulation","population"],"sources":["C:/Users/alexa/Desktop/PI Countries/PI-Countries-main/client/src/01_reducer/index.js"],"sourcesContent":["import { FILTER_BY_MAYOR_CINCUENTA , DELETE_ACTIVITY , FILTER_BY_ACTIVITIES, FILTER_BY_CONTINENT, GET_COUNTRIES, ORDER_BY_NAME, SEARCH_COUNTRIES, ASCENDENTE, POST_ACTIVITIES, GET_ACTIVITIES, ORDER_BY_POPULATION, HIGHER_POPULATION, DETAIL, RESET } from '../04_const/Const'\r\n\r\nconst initialState = {\r\n    countries: [],\r\n    allCountries: [],\r\n    activities: [],\r\n    detail: []\r\n}\r\n\r\nexport default function rootReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case GET_COUNTRIES:\r\n            return {\r\n                ...state,\r\n                countries: action.payload,\r\n                allCountries: action.payload\r\n            }\r\n\r\n        case FILTER_BY_CONTINENT:\r\n            const filtredCountriesByContinent = state.allCountries\r\n            const continentFilteredBC = action.payload === 'All' ? filtredCountriesByContinent : filtredCountriesByContinent.filter(el => el.continent === action.payload)\r\n            return {\r\n                ...state,\r\n                countries: continentFilteredBC\r\n            }\r\n\r\n            case FILTER_BY_MAYOR_CINCUENTA:\r\n            const filtredCountriesByMayorCincuenta= state.allCountries\r\n            const continentFilteredBCincuenta = action.payload === 'All' ? filtredCountriesByContinent : filtredCountriesByContinent.filter(el => el.continent === action.payload)\r\n            return {\r\n                ...state,\r\n                countries: continentFilteredBCincuenta\r\n            }\r\n\r\n        case FILTER_BY_ACTIVITIES:\r\n            const filtredCountriesByActivities = state.allCountries\r\n            const continentFilteredBA = filtredCountriesByActivities.filter((c) => { return c.activities.find((c) => { return c.name === action.payload; }); });\r\n\r\n            if (action.payload === 'todos') {\r\n                return { ...state, countries: filtredCountriesByActivities }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    countries: continentFilteredBA\r\n                }\r\n            }\r\n\r\n        case POST_ACTIVITIES:\r\n            return {\r\n                ...state\r\n            }\r\n\r\n            case DELETE_ACTIVITY:\r\n                return {\r\n                    ...state,\r\n                    activities: action.payload\r\n                }\r\n\r\n        case GET_ACTIVITIES:\r\n            return {\r\n                ...state,\r\n                activities: action.payload\r\n            }\r\n\r\n        case DETAIL:\r\n            return {\r\n                ...state,\r\n                detail: action.payload\r\n            }\r\n\r\n        case RESET:\r\n            return {\r\n                ...state,\r\n                detail: []\r\n            }\r\n\r\n        case SEARCH_COUNTRIES:\r\n            return {\r\n                ...state,\r\n                countries: action.payload\r\n            }\r\n\r\n        case ORDER_BY_NAME:\r\n            let orderCountriesByName = action.payload === ASCENDENTE ? state.countries.sort((a, b) => {\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            }) :\r\n                state.countries.sort((a, b) => {\r\n                    if (a.name < b.name) {\r\n                        return 1;\r\n                    }\r\n                    if (a.name > b.name) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                })\r\n\r\n            return {\r\n                ...state,\r\n                countries: orderCountriesByName\r\n            }\r\n\r\n        case ORDER_BY_POPULATION:\r\n            let orderCountriesByPopulation = action.payload === HIGHER_POPULATION ? state.countries.sort((a, b)=>{\r\n                if (a.population < b.population) {\r\n                    return 1;\r\n                }\r\n                if (a.population > b.population) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            }) :\r\n                state.countries.sort((a, b) => {\r\n\r\n                    if (a.population < b.population) {\r\n                        return -1;\r\n                    }\r\n                    if (a.population > b.population) {\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                })\r\n\r\n            return {\r\n                ...state,\r\n                countries: orderCountriesByPopulation\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,yBAAT,EAAqCC,eAArC,EAAuDC,oBAAvD,EAA6EC,mBAA7E,EAAkGC,aAAlG,EAAiHC,aAAjH,EAAgIC,gBAAhI,EAAkJC,UAAlJ,EAA8JC,eAA9J,EAA+KC,cAA/K,EAA+LC,mBAA/L,EAAoNC,iBAApN,EAAuOC,MAAvO,EAA+OC,KAA/O,QAA4P,mBAA5P;AAEA,MAAMC,YAAY,GAAG;EACjBC,SAAS,EAAE,EADM;EAEjBC,YAAY,EAAE,EAFG;EAGjBC,UAAU,EAAE,EAHK;EAIjBC,MAAM,EAAE;AAJS,CAArB;AAOA,eAAe,SAASC,WAAT,GAAmD;EAAA,IAA9BC,KAA8B,uEAAtBN,YAAsB;EAAA,IAARO,MAAQ;;EAE9D,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKlB,aAAL;MACI,OAAO,EACH,GAAGgB,KADA;QAEHL,SAAS,EAAEM,MAAM,CAACE,OAFf;QAGHP,YAAY,EAAEK,MAAM,CAACE;MAHlB,CAAP;;IAMJ,KAAKpB,mBAAL;MACI,MAAMqB,2BAA2B,GAAGJ,KAAK,CAACJ,YAA1C;MACA,MAAMS,mBAAmB,GAAGJ,MAAM,CAACE,OAAP,KAAmB,KAAnB,GAA2BC,2BAA3B,GAAyDA,2BAA2B,CAACE,MAA5B,CAAmCC,EAAE,IAAIA,EAAE,CAACC,SAAH,KAAiBP,MAAM,CAACE,OAAjE,CAArF;MACA,OAAO,EACH,GAAGH,KADA;QAEHL,SAAS,EAAEU;MAFR,CAAP;;IAKA,KAAKzB,yBAAL;MACA,MAAM6B,gCAAgC,GAAET,KAAK,CAACJ,YAA9C;MACA,MAAMc,2BAA2B,GAAGT,MAAM,CAACE,OAAP,KAAmB,KAAnB,GAA2BC,2BAA3B,GAAyDA,2BAA2B,CAACE,MAA5B,CAAmCC,EAAE,IAAIA,EAAE,CAACC,SAAH,KAAiBP,MAAM,CAACE,OAAjE,CAA7F;MACA,OAAO,EACH,GAAGH,KADA;QAEHL,SAAS,EAAEe;MAFR,CAAP;;IAKJ,KAAK5B,oBAAL;MACI,MAAM6B,4BAA4B,GAAGX,KAAK,CAACJ,YAA3C;MACA,MAAMgB,mBAAmB,GAAGD,4BAA4B,CAACL,MAA7B,CAAqCO,CAAD,IAAO;QAAE,OAAOA,CAAC,CAAChB,UAAF,CAAaiB,IAAb,CAAmBD,CAAD,IAAO;UAAE,OAAOA,CAAC,CAACE,IAAF,KAAWd,MAAM,CAACE,OAAzB;QAAmC,CAA9D,CAAP;MAAyE,CAAtH,CAA5B;;MAEA,IAAIF,MAAM,CAACE,OAAP,KAAmB,OAAvB,EAAgC;QAC5B,OAAO,EAAE,GAAGH,KAAL;UAAYL,SAAS,EAAEgB;QAAvB,CAAP;MACH,CAFD,MAEO;QACH,OAAO,EACH,GAAGX,KADA;UAEHL,SAAS,EAAEiB;QAFR,CAAP;MAIH;;IAEL,KAAKxB,eAAL;MACI,OAAO,EACH,GAAGY;MADA,CAAP;;IAIA,KAAKnB,eAAL;MACI,OAAO,EACH,GAAGmB,KADA;QAEHH,UAAU,EAAEI,MAAM,CAACE;MAFhB,CAAP;;IAKR,KAAKd,cAAL;MACI,OAAO,EACH,GAAGW,KADA;QAEHH,UAAU,EAAEI,MAAM,CAACE;MAFhB,CAAP;;IAKJ,KAAKX,MAAL;MACI,OAAO,EACH,GAAGQ,KADA;QAEHF,MAAM,EAAEG,MAAM,CAACE;MAFZ,CAAP;;IAKJ,KAAKV,KAAL;MACI,OAAO,EACH,GAAGO,KADA;QAEHF,MAAM,EAAE;MAFL,CAAP;;IAKJ,KAAKZ,gBAAL;MACI,OAAO,EACH,GAAGc,KADA;QAEHL,SAAS,EAAEM,MAAM,CAACE;MAFf,CAAP;;IAKJ,KAAKlB,aAAL;MACI,IAAI+B,oBAAoB,GAAGf,MAAM,CAACE,OAAP,KAAmBhB,UAAnB,GAAgCa,KAAK,CAACL,SAAN,CAAgBsB,IAAhB,CAAqB,CAACC,CAAD,EAAIC,CAAJ,KAAU;QACtF,IAAID,CAAC,CAACH,IAAF,GAASI,CAAC,CAACJ,IAAf,EAAqB;UACjB,OAAO,CAAC,CAAR;QACH;;QACD,IAAIG,CAAC,CAACH,IAAF,GAASI,CAAC,CAACJ,IAAf,EAAqB;UACjB,OAAO,CAAP;QACH;;QACD,OAAO,CAAP;MACH,CAR0D,CAAhC,GASvBf,KAAK,CAACL,SAAN,CAAgBsB,IAAhB,CAAqB,CAACC,CAAD,EAAIC,CAAJ,KAAU;QAC3B,IAAID,CAAC,CAACH,IAAF,GAASI,CAAC,CAACJ,IAAf,EAAqB;UACjB,OAAO,CAAP;QACH;;QACD,IAAIG,CAAC,CAACH,IAAF,GAASI,CAAC,CAACJ,IAAf,EAAqB;UACjB,OAAO,CAAC,CAAR;QACH;;QACD,OAAO,CAAP;MACH,CARD,CATJ;MAmBA,OAAO,EACH,GAAGf,KADA;QAEHL,SAAS,EAAEqB;MAFR,CAAP;;IAKJ,KAAK1B,mBAAL;MACI,IAAI8B,0BAA0B,GAAGnB,MAAM,CAACE,OAAP,KAAmBZ,iBAAnB,GAAuCS,KAAK,CAACL,SAAN,CAAgBsB,IAAhB,CAAqB,CAACC,CAAD,EAAIC,CAAJ,KAAQ;QACjG,IAAID,CAAC,CAACG,UAAF,GAAeF,CAAC,CAACE,UAArB,EAAiC;UAC7B,OAAO,CAAP;QACH;;QACD,IAAIH,CAAC,CAACG,UAAF,GAAeF,CAAC,CAACE,UAArB,EAAiC;UAC7B,OAAO,CAAC,CAAR;QACH;;QACD,OAAO,CAAP;MACH,CARuE,CAAvC,GAS7BrB,KAAK,CAACL,SAAN,CAAgBsB,IAAhB,CAAqB,CAACC,CAAD,EAAIC,CAAJ,KAAU;QAE3B,IAAID,CAAC,CAACG,UAAF,GAAeF,CAAC,CAACE,UAArB,EAAiC;UAC7B,OAAO,CAAC,CAAR;QACH;;QACD,IAAIH,CAAC,CAACG,UAAF,GAAeF,CAAC,CAACE,UAArB,EAAiC;UAC7B,OAAO,CAAP;QACH;;QACD,OAAO,CAAP;MACH,CATD,CATJ;MAoBA,OAAO,EACH,GAAGrB,KADA;QAEHL,SAAS,EAAEyB;MAFR,CAAP;;IAKJ;MACI,OAAOpB,KAAP;EA5HR;AA8HH"},"metadata":{},"sourceType":"module"}